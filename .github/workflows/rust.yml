name: Rust

on:
  push:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  quickcheck:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.rustversion.outputs.rustversion }}
    steps:
    - uses: actions/checkout@v2
    - run: cargo check
    - run: cargo pkgid
    - run: 'echo "$(cargo pkgid | cut -d# -f2)"'
    - id: rustversion
      run: 'echo "::set-output name=rustversion::$(cargo pkgid | cut -d# -f2)"'
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Clippy
      run: rustup component add clippy rustfmt
    - id: cargoversion
      run: cargo --version
    - id: rustcversion
      run: rustc --version
    - name: Clippy
      run: cargo clippy -- -D warnings
    - name: Rustfmt
      run: cargo fmt --all -- --check
    - name: Run tests
      run: cargo test
    - name: Build
      run: cargo build --verbose --release
    - name: Upload alma-nv Artifact
      uses: actions/upload-artifact@v2
      with:
        name: x86_64-gcc
        path: ./target/release/alma
  amd64binaries:
    needs: [build, quickcheck]
    runs-on: ubuntu-latest
    name: Amd64StaticBinaries
    steps:
    - uses: actions/checkout@v2
    - name: StaticBinaryBuild
      id: amd64staticbuild
      uses: jamesmcm/cargo-deb-amd64-ubuntu@master
      with:
        cmd: cargo build --release --target=x86_64-unknown-linux-musl
    - name: Upload alma-nv Artifact
      uses: actions/upload-artifact@v2
      with:
        name: x86_64-musl
        path: ./target/x86_64-unknown-linux-musl/release/alma
  update_release_draft:
    needs: [quickcheck, build, amd64binaries]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: '${{ needs.quickcheck.outputs.version }}'
          release_name: alma-nv ${{ needs.quickcheck.outputs.version }}
          body: 'Changelog:'
          draft: true
          prerelease: false
      - uses: actions/download-artifact@v2
      - run: ls -lha
      - run: ls -lha x86_64-musl
      - run: ls -lha x86_64-gcc
      - name: Upload Amd64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./x86_64-gcc/alma
          asset_name: 'alma-nv_${{needs.quickcheck.outputs.version}}_linux_x86-64_gcc'
          asset_content_type: application/octet-stream
